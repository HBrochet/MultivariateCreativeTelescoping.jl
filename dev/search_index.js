var documenterSearchIndex = {"docs":
[{"location":"QuickStart/","page":"Quick start","title":"Quick start","text":"CurrentModule = MultivariateCreativeTelescoping\nDocTestSetup  = quote\n    using MultivariateCreativeTelescoping\nend","category":"page"},{"location":"QuickStart/","page":"Quick start","title":"Quick start","text":"The first step is to define an algebra using the OreAlg function.","category":"page"},{"location":"QuickStart/#Definition-of-an-Algebra","page":"Quick start","title":"Definition of an Algebra","text":"","category":"section"},{"location":"QuickStart/","page":"Quick start","title":"Quick start","text":"The following command create an object of type OreAlg.","category":"page"},{"location":"QuickStart/","page":"Quick start","title":"Quick start","text":"OreAlg","category":"page"},{"location":"QuickStart/#MultivariateCreativeTelescoping.OreAlg","page":"Quick start","title":"MultivariateCreativeTelescoping.OreAlg","text":"OreAlg(;char :: Int = 0,\nratvars :: Vector{String} = String[],\nratdiffvars :: Tuple{Vector{String},Vector{String}}=(String[],String[]), \npoldiffvars :: Tuple{Vector{String},Vector{String}}=(String[],String[]), \npolvars :: Vector{String} = String[],\nlocvars :: Tuple{Vector{String},Vector{String}} = (String[],String[]),\norder :: String = \"\",\nnomul :: Vector{String} = String[]\n\nFor more information see the online documentation\n\n\n\n\n\n","category":"type"},{"location":"QuickStart/","page":"Quick start","title":"Quick start","text":"char is the characteristic of the base field and is by default 0.\nratvars is a vector of string representing rational variables in the base field.\nratdiffvars is a pair of vectors of same length representing pairs of variables (t_id_t_i)  that satisfy the relation d_t_it_i = t_i d_t_i +1. The variables t_i are part of the base field  and the variables d_t_i are polynomial variables. \npoldiffvars is a pair of vectors of same length representing pairs of variables (x_id_x_i)  that satisfy the relation d_x_ix_i = x_i d_x_i +1. The variables x_i and d_x_i are polynomial variables \npolvars is a vector of string representing polynomial variables.\nlocvars is a pair of vectors of same length representing pairs (T_ip_i) where T_i are variable names  and p_i are parsable polynomials in all the previous variables except for d_t_i and d_x_i.  The variables T_i corresponds to the inverse of p_i and satisfy the commutation rule  d_u T = Td_u - partial_u(p_i)T^2 for any uin  x_it_i.\norder is a parsable order of the form \"ord var1 ... varn > ord var1 ... varm > ...\"  where ord is currently either lex or grevlex and vari names of the previous variables. \nnomul is a vector of strings. If a name of a polynomial variable is in this vector then no multiplication by this   variable will be performed during GrÃ¶bner basis computation.","category":"page"},{"location":"QuickStart/","page":"Quick start","title":"Quick start","text":"Here is a simple example","category":"page"},{"location":"QuickStart/","page":"Quick start","title":"Quick start","text":"julia> using MultivariateCreativeTelescoping\n\njulia> A = OreAlg(order = \"lex dt > grevlex x dx\",ratdiffvars=([\"t\"],[\"dt\"]),poldiffvars=([\"x\"],[\"dx\"]))\nOreAlgebra","category":"page"},{"location":"#Introduction","page":"Presentation","title":"Introduction","text":"","category":"section"},{"location":"","page":"Presentation","title":"Presentation","text":"MultivariateCreativeTelescoping or MCT is a package to compute linear differential equations of parametric integrals using a method called creative telescoping (see e.g. here for an introduction to creative telescoping). This package implements an algorithm recently presented at the JNCF conference [slides] but no preprint are available yet. ","category":"page"},{"location":"","page":"Presentation","title":"Presentation","text":"This package focuses on integrals with natural boundaries of the form ","category":"page"},{"location":"","page":"Presentation","title":"Presentation","text":"    I(t) = int f(t boldsymbolx) d boldsymbolx","category":"page"},{"location":"","page":"Presentation","title":"Presentation","text":"where boldsymbolx=(x_1dotsx_n) and f is a D-finite/holonomic function that satisfies PDEs with coefficients in mathbbQ(t)boldsymbolx. It is also possible to replace mathbbQ with a field of multivariate rational functions over mathbbQ but performances are not very satisfactory. Algebraic extensions of mathbbQ are not supported. ","category":"page"},{"location":"#Installation","page":"Presentation","title":"Installation","text":"","category":"section"},{"location":"","page":"Presentation","title":"Presentation","text":"This package is not yet registered in the general julia registry. To install it you need to clone the project and to add in your julia config file located at ~/.julia/config/startup.jl the following line where you will have previously replaced /PATH/TO with the path to the downloaded repository. ","category":"page"},{"location":"","page":"Presentation","title":"Presentation","text":"push!(LOAD_PATH, \"/PATH/TO/MultivariateCreativeTelescoping\")","category":"page"},{"location":"","page":"Presentation","title":"Presentation","text":"Then you should be able to load the package by using the following command in Julia's REPL ","category":"page"},{"location":"","page":"Presentation","title":"Presentation","text":"using MultivariateCreativeTelescoping","category":"page"},{"location":"#Definition-of-an-algebra","page":"Presentation","title":"Definition of an algebra","text":"","category":"section"},{"location":"","page":"Presentation","title":"Presentation","text":"and a is an operator in the algebra mathbbQ(t)xlangle partial_tpartial_xrangle.","category":"page"}]
}
